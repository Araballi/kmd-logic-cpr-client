// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Logic.Cpr.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SubscribedCitizenEvents
    {
        /// <summary>
        /// Initializes a new instance of the SubscribedCitizenEvents class.
        /// </summary>
        public SubscribedCitizenEvents()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SubscribedCitizenEvents class.
        /// </summary>
        /// <param name="actualCount">Number of CPR events fetched prior to
        /// filtering to just the subscribed citizens</param>
        /// <param name="events">The events filtered by subscription</param>
        public SubscribedCitizenEvents(int actualCount, IList<CitizenEvent> events = default(IList<CitizenEvent>))
        {
            Events = events;
            ActualCount = actualCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the events filtered by subscription
        /// </summary>
        [JsonProperty(PropertyName = "events")]
        public IList<CitizenEvent> Events { get; set; }

        /// <summary>
        /// Gets or sets number of CPR events fetched prior to filtering to
        /// just the subscribed citizens
        /// </summary>
        [JsonProperty(PropertyName = "actualCount")]
        public int ActualCount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
